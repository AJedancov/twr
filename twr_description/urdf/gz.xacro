<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- =============== -->
    <!-- === Sensors === -->
    <!-- =============== -->

    <!-- === LIDAR === -->
    <gazebo reference="lidar_link">
        <sensor name="lidar" type="gpu_lidar">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <lidar>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.1415926535</min_angle>
                        <max_angle>3.1415926535</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.05</min>
                    <max>5</max>
                </range>
            </lidar>
            <topic>scan</topic>
            <gz_frame_id>lidar_link</gz_frame_id>
        </sensor>
    </gazebo>


    <!-- =============== -->
    <!-- === Plugins === -->
    <!-- =============== -->
    <gazebo>
        <!-- Ros2 control plugin -->
        <!-- In addition to the ros2_control tags, a Gazebo plugin needs to be added to your URDF 
        that actually parses the ros2_control tags and loads the appropriate hardware interfaces and controller manager -->
        <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
            <parameters> $(find twr_control)/ros2_controllers/diff_drive_controller/config/twr_diff_drive_controller.yaml </parameters>
        </plugin>

        <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
        </plugin>

        <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin>

        <plugin filename="gz-sim-odometry-publisher-system" name="gz::sim::systems::OdometryPublisher">
            <odom_frame>map</odom_frame>
            <robot_base_frame>base_link</robot_base_frame>
            <dimensions>3</dimensions>
        </plugin>
        
    </gazebo>

</robot>